{"version":3,"sources":["webpack:///./src/app/auth/containers/activate-email/activate-email.component.html","webpack:///./src/app/auth/containers/create-account/create-account.component.html","webpack:///./src/app/auth/containers/forgot-password/forgot-password.component.html","webpack:///./src/app/auth/containers/link-account/link-account.component.html","webpack:///./src/app/auth/containers/login/login.component.html","webpack:///./src/app/auth/containers/recovery-password/recovery-password.component.html","webpack:///./src/app/auth/auth-routing.module.ts","webpack:///./src/app/auth/auth.module.ts","webpack:///./src/app/auth/containers/activate-email/activate-email.component.scss","webpack:///./src/app/auth/containers/activate-email/activate-email.component.ts","webpack:///./src/app/auth/containers/activate-email/index.ts","webpack:///./src/app/auth/containers/create-account/create-account.component.scss","webpack:///./src/app/auth/containers/create-account/create-account.component.ts","webpack:///./src/app/auth/containers/create-account/index.ts","webpack:///./src/app/auth/containers/forgot-password/forgot-password.component.scss","webpack:///./src/app/auth/containers/forgot-password/forgot-password.component.ts","webpack:///./src/app/auth/containers/forgot-password/index.ts","webpack:///./src/app/auth/containers/index.ts","webpack:///./src/app/auth/containers/link-account/index.ts","webpack:///./src/app/auth/containers/link-account/link-account.component.scss","webpack:///./src/app/auth/containers/link-account/link-account.component.ts","webpack:///./src/app/auth/containers/login/index.ts","webpack:///./src/app/auth/containers/login/login.component.scss","webpack:///./src/app/auth/containers/login/login.component.ts","webpack:///./src/app/auth/containers/recovery-password/index.ts","webpack:///./src/app/auth/containers/recovery-password/recovery-password.component.scss","webpack:///./src/app/auth/containers/recovery-password/recovery-password.component.ts"],"names":[],"mappings":";;;;;;;;;AAAA,iR;;;;;;;;;;;ACAA,6nE;;;;;;;;;;;ACAA,imC;;;;;;;;;;;ACAA,urD;;;;;;;;;;;ACAA,2yC;;;;;;;;;;;ACAA,owC;;;;;;;;;;;;;;;;;;;;ACAuC;AACc;AAOvB;AACyC;AAEvE,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,2EAAsB;QACjC,WAAW,EAAE,CAAC,iEAAqB,CAAC;KACrC;IACD;QACE,IAAI,EAAE,cAAc;QACpB,SAAS,EAAE,yEAAoB;QAC/B,WAAW,EAAE,CAAC,8DAAkB,CAAC;KAClC;IACD;QACE,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,2EAAsB;QACjC,WAAW,EAAE,CAAC,iEAAqB,CAAC;KACrC;IACD;QACE,IAAI,EAAE,iBAAiB;QACvB,SAAS,EAAE,4EAAuB;QAClC,WAAW,EAAE,CAAC,iEAAqB,CAAC;KACrC;IACD;QACE,IAAI,EAAE,mBAAmB;QACzB,SAAS,EAAE,8EAAyB;QACpC,WAAW,EAAE,CAAC,iEAAqB,CAAC;KACrC;IACD;QACE,IAAI,EAAE,OAAO;QACb,SAAS,EAAE,mEAAc;QACzB,WAAW,EAAE,CAAC,iEAAqB,CAAC;KACrC;IACD;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,MAAM;QACjB,UAAU,EAAE,OAAO;KACpB;CACF,CAAC;AAMF;IAAA;IACA,CAAC;IADY,iBAAiB;QAJ7B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,iBAAiB,CAC7B;IAAD,wBAAC;CAAA;AAD6B;;;;;;;;;;;;;;;;;;;;;;;;;;ACrDS;AACM;AACgD;AACrC;AAS7B;AAC0E;AACrC;AAC4B;AACN;AA0BtF;IAAA;IACA,CAAC;IADY,UAAU;QAxBtB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,kEAAsB;gBACtB,0DAAc;gBACd,mEAAuB;gBACvB,mHAAyB;gBACzB,0GAAsB;gBACtB,oGAAoB;aACrB;YACD,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,kEAAmB;gBACnB,iEAAe;gBACf,+DAAa;gBACb,mEAAiB;gBACjB,gEAAc;gBACd,+DAAa;gBACb,sEAAoB;gBACpB,0EAAwB;gBACxB,mEAAiB;gBACjB,sEAAiB;aAClB;SACF,CAAC;OACW,UAAU,CACtB;IAAD,iBAAC;CAAA;AADsB;;;;;;;;;;;;AC1CvB,+DAA+D,uL;;;;;;;;;;;;;;;;;;;;ACAf;AACO;AACT;AACA;AAO9C;IAIE,gCACU,KAAqB,EACrB,MAAc,EACd,OAAuB,EACvB,QAAqB;QAHrB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,YAAO,GAAP,OAAO,CAAgB;QACvB,aAAQ,GAAR,QAAQ,CAAa;IAE/B,CAAC;IAED,yCAAQ,GAAR;QAAA,iBAaC;QAZC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,SAAS,CAChC,gBAAM;YACJ,KAAI,CAAC,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YACjC,KAAI,CAAC,OAAO,CAAC,YAAY,CAAC,KAAI,CAAC,KAAK,CAAC;iBAClC,SAAS,CAAC,kBAAQ;gBACjB,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,+BAA+B,EAAE,IAAI,EAAE;oBACxD,QAAQ,EAAE,IAAI;iBACf,CAAC,CAAC;gBACH,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC,CAAC;YAC9C,CAAC,CAAC,CAAC;QACP,CAAC,CACF,CAAC;IACJ,CAAC;;gBApBgB,8DAAc;gBACb,sDAAM;gBACL,4DAAc;gBACb,6DAAW;;IARpB,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,4LAA8C;;SAE/C,CAAC;OACW,sBAAsB,CA2BlC;IAAD,6BAAC;CAAA;AA3BkC;;;;;;;;;;;;;ACVnC;AAAA;AAAA;AAAA;AAA2C;;;;;;;;;;;;ACA3C,yBAAyB,gBAAgB,GAAG,6CAA6C,mlB;;;;;;;;;;;;;;;;;;;;;ACA9B;AACO;AACpB;AACA;AACP;AAOvC;IAKE,gCACU,EAAe,EACf,MAAc,EACd,OAAuB,EACvB,QAAqB;QAHrB,OAAE,GAAF,EAAE,CAAa;QACf,WAAM,GAAN,MAAM,CAAQ;QACd,YAAO,GAAP,OAAO,CAAgB;QACvB,aAAQ,GAAR,QAAQ,CAAa;QAP/B,eAAU,GAAG,KAAK,CAAC;IASnB,CAAC;IAED,4CAAW,GAAX;QACE,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;IACtB,CAAC;IAED,yCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,uCAAM,GAAN;QAAA,iBA2BC;QA1BC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACrB,OAAO;SACR;QAEK,wBAAkD,EAAjD,cAAI,EAAE,gBAAK,EAAE,sBAAQ,EAAE,oBAA0B,CAAC;QAEzD,IAAI,QAAQ,KAAK,OAAO,EAAE;YACxB,OAAO;SACR;QACD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;QAEpB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAC,IAAI,QAAE,KAAK,SAAE,QAAQ,YAAC,CAAC;aACzC,SAAS,CACR,kBAAQ;YACN,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mCAAmC,EAAE,IAAI,EAAE;gBAC5D,QAAQ,EAAE,CAAC;aACZ,CAAC,CAAC;YACH,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;QACvC,CAAC,EACD;YACE,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mCAAmC,EAAE,IAAI,CAAC,CAAC;YAC9D,KAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;YACnB,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAC1B,CAAC,CACF,CAAC;IACN,CAAC;IAEO,0CAAS,GAAjB;QACE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YACzE,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YACnE,QAAQ,EAAE,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClD,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAClD,CAAC,CAAC;IACL,CAAC;;gBApDa,0DAAW;gBACP,sDAAM;gBACL,4DAAc;gBACb,6DAAW;;IATpB,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,4LAA8C;;SAE/C,CAAC;OACW,sBAAsB,CA4DlC;IAAD,6BAAC;CAAA;AA5DkC;;;;;;;;;;;;;ACXnC;AAAA;AAAA;AAAA;AAA2C;;;;;;;;;;;;ACA3C,yBAAyB,gBAAgB,GAAG,6CAA6C,+lB;;;;;;;;;;;;;;;;;;;;;ACAzC;AACkB;AACvB;AACG;AACP;AAOvC;IAKE,iCACU,WAAwB,EACxB,EAAe,EACf,QAAqB,EACrB,MAAc;QAHd,gBAAW,GAAX,WAAW,CAAa;QACxB,OAAE,GAAF,EAAE,CAAa;QACf,aAAQ,GAAR,QAAQ,CAAa;QACrB,WAAM,GAAN,MAAM,CAAQ;QAPxB,eAAU,GAAG,KAAK,CAAC;IASnB,CAAC;IAED,0CAAQ,GAAR;QACE,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,sCAAI,GAAJ;QAAA,iBAqBC;QApBC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACrB,OAAO;SACR;QACD,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;QACb,iCAAK,CAAoB;QAChC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC;aAC3B,SAAS,CACR;YACE,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAC;YAClD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;QACvC,CAAC,EACD,UAAC,GAAG;YACF,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,KAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;YACnB,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,8CAA8C,EAAE,IAAI,CAAC,CAAC;QAC3E,CAAC,CACF,CAAC;IAEN,CAAC;IAEO,2CAAS,GAAjB;QACE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;SACpE,CAAC,CAAC;IACL,CAAC;;gBAtCsB,yDAAW;gBACpB,0DAAW;gBACL,6DAAW;gBACb,sDAAM;;IATb,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;YAC/B,+LAA+C;;SAEhD,CAAC;OACW,uBAAuB,CA8CnC;IAAD,8BAAC;CAAA;AA9CmC;;;;;;;;;;;;;ACXpC;AAAA;AAAA;AAAA;AAA4C;;;;;;;;;;;;;ACA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiC;AACA;AACC;AACH;AACP;AACY;;;;;;;;;;;;;ACLpC;AAAA;AAAA;AAAA;AAAyC;;;;;;;;;;;;ACAzC,yBAAyB,gBAAgB,GAAG,mBAAmB,0CAA0C,8BAA8B,gCAAgC,wBAAwB,yBAAyB,kBAAkB,kBAAkB,6BAA6B,oCAAoC,qBAAqB,mBAAmB,iBAAiB,GAAG,0BAA0B,yBAAyB,kBAAkB,iBAAiB,gBAAgB,GAAG,6CAA6C,+qD;;;;;;;;;;;;;;;;;;;;;ACA/d;AACwB;AACN;AACpB;AACP;AAOvC;IAME,8BACU,WAAwB,EACxB,EAAe,EACf,WAAwB,EACxB,MAAc,EACd,QAAqB,EACrB,OAAuB;QALvB,gBAAW,GAAX,WAAW,CAAa;QACxB,OAAE,GAAF,EAAE,CAAa;QACf,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,aAAQ,GAAR,QAAQ,CAAa;QACrB,YAAO,GAAP,OAAO,CAAgB;QARjC,eAAU,GAAG,KAAK,CAAC;IAUnB,CAAC;IAED,uCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,sBAAI,yCAAO;aAAX;YACE,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QACtE,CAAC;;;OAAA;IAED,uCAAQ,GAAR;QAAA,iBAoBC;QAnBC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACrB,OAAO;SACR;QAEM,uCAAQ,CAAoB;QACnC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;QAEpB,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,QAAQ,CAAC;aACpC,SAAS,CACR,kBAAQ;YACN,KAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;YAC9B,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAC1B,CAAC,EACD,UAAC,GAAG;YACF,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,KAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;QACrB,CAAC,CACF,CAAC;IACN,CAAC;IAED,qCAAM,GAAN;QAAA,iBAgBC;QAfS,uCAAQ,CAAqB;QACrC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC;aAC/C,SAAS,CACR,kBAAQ;YACR,KAAI,CAAC,WAAW,CAAC,oBAAoB,EAAE,CAAC;YACxC,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YACvC,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC;YAChD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;YACrC,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAC1B,CAAC,EACC;YACE,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kCAAkC,EAAE,IAAI,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC;IACT,CAAC;IAEO,wCAAS,GAAjB;QACE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,QAAQ,EAAE,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;SAC9E,CAAC,CAAC;IACL,CAAC;;gBA7DsB,yDAAW;gBACpB,0DAAW;gBACF,yDAAW;gBAChB,sDAAM;gBACJ,6DAAW;gBACZ,4DAAc;;IAZtB,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,sLAA4C;;SAE7C,CAAC;OACW,oBAAoB,CAsEhC;IAAD,2BAAC;CAAA;AAtEgC;;;;;;;;;;;;;ACXjC;AAAA;AAAA;AAAA;AAAkC;;;;;;;;;;;;ACAlC,yBAAyB,gBAAgB,GAAG,6CAA6C,+f;;;;;;;;;;;;;;;;;;;;;ACAzC;AACL;AACuB;AAC3B;AACO;AAO9C;IAKE,wBACU,EAAe,EACf,MAAc,EACd,OAAoB,EACpB,QAAqB;QAHrB,OAAE,GAAF,EAAE,CAAa;QACf,WAAM,GAAN,MAAM,CAAQ;QACd,YAAO,GAAP,OAAO,CAAa;QACpB,aAAQ,GAAR,QAAQ,CAAa;QAN/B,eAAU,GAAG,KAAK,CAAC;IAQnB,CAAC;IAED,iCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,8BAAK,GAAL;QAAA,iBAwBC;QAvBC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACrB,OAAO;SACR;QAEK,wBAAmC,EAAlC,gBAAK,EAAE,sBAA2B,CAAC;QAC1C,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;QACpB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QAEvB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,EAAE,QAAQ,CAAC;aAChC,SAAS,CACR,kBAAQ;YACN,IAAI,CAAC,QAAQ,CAAC,gBAAgB,EAAE;gBAC9B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,EAAE,cAAc,CAAC,CAAC,CAAC;gBACnD,OAAO;aACR;YACD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;YACrC,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAC1B,CAAC,EACD;YACE,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,+CAA+C,EAAE,IAAI,CAAC,CAAC;YAC1E,KAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC;IACT,CAAC;IAEO,kCAAS,GAAjB;QACE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YACnE,QAAQ,EAAE,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SACrD,CAAC,CAAC;IACL,CAAC;;gBA1Ca,0DAAW;gBACP,sDAAM;gBACL,yDAAW;gBACV,6DAAW;;IATpB,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,iKAAqC;;SAEtC,CAAC;OACW,cAAc,CAiD1B;IAAD,qBAAC;CAAA;AAjD0B;;;;;;;;;;;;;ACX3B;AAAA;AAAA;AAAA;AAA8C;;;;;;;;;;;;ACA9C,yBAAyB,gBAAgB,GAAG,6CAA6C,+mB;;;;;;;;;;;;;;;;;;;;;ACAzC;AACkB;AACvB;AACG;AACS;AAOvD;IAME,mCACU,WAAwB,EACxB,EAAe,EACf,QAAqB,EACrB,KAAqB,EACrB,MAAc;QAJd,gBAAW,GAAX,WAAW,CAAa;QACxB,OAAE,GAAF,EAAE,CAAa;QACf,aAAQ,GAAR,QAAQ,CAAa;QACrB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QARxB,eAAU,GAAG,KAAK,CAAC;IAUnB,CAAC;IAED,4CAAQ,GAAR;QAAA,iBAKC;QAJC,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,SAAS,CAChC,gBAAM,IAAI,YAAI,CAAC,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,EAAhC,CAAgC,CAC3C,CAAC;IACJ,CAAC;IAED,wCAAI,GAAJ;QAAA,iBA4BC;QA3BC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACrB,OAAO;SACR;QACK,wBAAqC,EAApC,sBAAQ,EAAE,oBAA0B,CAAC;QAC5C,IAAI,QAAQ,KAAK,OAAO,EAAE;YACxB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,EAAC,OAAO,EAAE,4BAA4B,EAAC,CAAC,CAAC;YAC5E,OAAO;SACR;aAAM;YACL,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;SAC1C;QAED,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;QACpB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC;aAC5C,SAAS,CACR;YACE,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAC;YAClD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC,CAAC;QAC9C,CAAC,EACD,UAAC,GAAG;YACF,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,KAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;YACnB,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;QAC9C,CAAC,CACF,CAAC;IAEN,CAAC;IAEO,6CAAS,GAAjB;QACE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,QAAQ,EAAE,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACpD,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SACpD,CAAC,CAAC;IACL,CAAC;;gBAlDsB,yDAAW;gBACpB,0DAAW;gBACL,6DAAW;gBACd,8DAAc;gBACb,sDAAM;;IAXb,yBAAyB;QALrC,+DAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;YACjC,qMAAiD;;SAElD,CAAC;OACW,yBAAyB,CA2DrC;IAAD,gCAAC;CAAA;AA3DqC","file":"auth-auth-module-es5.js","sourcesContent":["module.exports = \"<mat-progress-bar\\n  class=\\\"progress-bar\\\"\\n  mode=\\\"indeterminate\\\"\\n  color=\\\"primary\\\"></mat-progress-bar>\\n<div class=\\\"main__content\\\">\\n  <div class=\\\"main__header\\\">\\n    <h2 class=\\\"main__title\\\">Confirmando seu email...</h2>\\n  </div>\\n</div>\\n\"","module.exports = \"<mat-progress-bar\\r\\n  class=\\\"progress-bar\\\"\\r\\n  mode=\\\"indeterminate\\\"\\r\\n  color=\\\"primary\\\"\\r\\n  *ngIf=\\\"processing\\\"></mat-progress-bar>\\r\\n<div class=\\\"main__content\\\">\\r\\n  <div class=\\\"main__header\\\">\\r\\n    <h2 class=\\\"main__title\\\">Criar conta</h2>\\r\\n  </div>\\r\\n  <mat-card>\\r\\n<!--    <mat-card-title>Dados de cadastro</mat-card-title>-->\\r\\n\\r\\n    <form [formGroup]=\\\"form\\\">\\r\\n      <mat-grid-list cols=\\\"1\\\" rowHeight=\\\"81px\\\">\\r\\n        <mat-grid-tile>\\r\\n          <mat-form-field appearance=\\\"fill\\\" class=\\\"fullwidth\\\">\\r\\n            <mat-label>Nome</mat-label>\\r\\n            <input matInput placeholder=\\\"Nome e sobrenome\\\" formControlName=\\\"name\\\">\\r\\n          </mat-form-field>\\r\\n        </mat-grid-tile>\\r\\n        <mat-grid-tile>\\r\\n          <mat-form-field appearance=\\\"fill\\\" class=\\\"fullwidth\\\">\\r\\n            <mat-label>Email</mat-label>\\r\\n            <input type=\\\"email\\\" matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\">\\r\\n          </mat-form-field>\\r\\n        </mat-grid-tile>\\r\\n      </mat-grid-list>\\r\\n      <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"81px\\\" gutterSize=\\\"16px\\\">\\r\\n        <mat-grid-tile>\\r\\n          <mat-form-field appearance=\\\"fill\\\" class=\\\"fullwidth\\\">\\r\\n            <mat-label>Senha</mat-label>\\r\\n            <input type=\\\"password\\\" matInput placeholder=\\\"Senha\\\" formControlName=\\\"password\\\">\\r\\n          </mat-form-field>\\r\\n        </mat-grid-tile>\\r\\n        <mat-grid-tile>\\r\\n          <mat-form-field appearance=\\\"fill\\\" class=\\\"fullwidth\\\">\\r\\n            <mat-label>Confirmar senha</mat-label>\\r\\n            <input type=\\\"password\\\" matInput placeholder=\\\"Informe novamente\\\" formControlName=\\\"confirm\\\">\\r\\n          </mat-form-field>\\r\\n        </mat-grid-tile>\\r\\n      </mat-grid-list>\\r\\n    </form>\\r\\n    <mat-card-actions align=\\\"end\\\">\\r\\n      <button mat-button\\r\\n              color=\\\"primary\\\"\\r\\n              [routerLink]=\\\"['/account', 'login']\\\">Login</button>\\r\\n      <button mat-raised-button\\r\\n              color=\\\"primary\\\"\\r\\n              (click)=\\\"create()\\\">Cadastrar</button>\\r\\n    </mat-card-actions>\\r\\n  </mat-card>\\r\\n</div>\\r\\n\"","module.exports = \"<mat-progress-bar\\r\\n  class=\\\"progress-bar\\\"\\r\\n  mode=\\\"indeterminate\\\"\\r\\n  color=\\\"primary\\\"\\r\\n  *ngIf=\\\"processing\\\"></mat-progress-bar>\\r\\n<div class=\\\"main__content\\\">\\r\\n  <div class=\\\"main__header\\\">\\r\\n    <h2 class=\\\"main__title\\\">Esqueci minha senha</h2>\\r\\n  </div>\\r\\n  <mat-card>\\r\\n    <mat-card-subtitle>Informe seu email de cadastro</mat-card-subtitle>\\r\\n    <form [formGroup]=\\\"form\\\">\\r\\n      <mat-grid-list cols=\\\"1\\\" rowHeight=\\\"81px\\\">\\r\\n        <mat-grid-tile>\\r\\n          <mat-form-field appearance=\\\"fill\\\" class=\\\"fullwidth\\\">\\r\\n            <mat-label>Email</mat-label>\\r\\n            <input matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\">\\r\\n          </mat-form-field>\\r\\n        </mat-grid-tile>\\r\\n      </mat-grid-list>\\r\\n    </form>\\r\\n    <mat-card-actions align=\\\"end\\\">\\r\\n      <button mat-button [routerLink]=\\\"['/account', 'login']\\\" color=\\\"primary\\\">Login</button>\\r\\n      <button mat-raised-button\\r\\n              color=\\\"primary\\\"\\r\\n              (click)=\\\"send()\\\">Entrar</button>\\r\\n    </mat-card-actions>\\r\\n  </mat-card>\\r\\n</div>\\r\\n\"","module.exports = \"<mat-progress-bar\\n  class=\\\"progress-bar\\\"\\n  mode=\\\"indeterminate\\\"\\n  color=\\\"primary\\\"\\n  *ngIf=\\\"processing\\\"></mat-progress-bar>\\n<div class=\\\"main__content\\\">\\n  <div class=\\\"main__header\\\">\\n    <h2 class=\\\"main__title\\\">Vincular conta</h2>\\n  </div>\\n  <mat-card>\\n    <mat-card-content>\\n      Agora vamos vincular sua conta a um perfil válido no jogo. <br>\\n      Abaixo, informe seu nome de invocador - aquele que as pessoas veem no jogo - para verificarmos se o perfil existe.\\n    </mat-card-content>\\n    <form [formGroup]=\\\"form\\\">\\n      <mat-grid-list cols=\\\"1\\\" rowHeight=\\\"81px\\\">\\n         <mat-grid-tile>\\n           <mat-form-field appearance=\\\"fill\\\" class=\\\"fullwidth\\\">\\n             <mat-label>Invocador</mat-label>\\n             <input matInput placeholder=\\\"Nome de invocador\\\" formControlName=\\\"summoner\\\">\\n           </mat-form-field>\\n         </mat-grid-tile>\\n      </mat-grid-list>\\n    </form>\\n    <mat-card-actions align=\\\"end\\\" *ngIf=\\\"!iconId\\\">\\n      <button mat-raised-button\\n              color=\\\"primary\\\"\\n              (click)=\\\"register()\\\">Vincular</button>\\n    </mat-card-actions>\\n    <ng-container *ngIf=\\\"urlIcon\\\">\\n      <mat-card-content>\\n        Agora, acesse sua conta no LoL e coloque o ícone abaixo como ícone da conta. Depois, clique em verificar\\n      </mat-card-content>\\n      <div class=\\\"profile-icon\\\">\\n        <img [src]=\\\"urlIcon\\\" alt=\\\"\\\" class=\\\"profile-icon__image\\\">\\n      </div>\\n      <mat-card-actions align=\\\"end\\\">\\n        <button mat-raised-button\\n                color=\\\"primary\\\"\\n                (click)=\\\"verify()\\\">Verificar</button>\\n      </mat-card-actions>\\n    </ng-container>\\n  </mat-card>\\n</div>\\n\"","module.exports = \"<mat-progress-bar\\r\\n  class=\\\"progress-bar\\\"\\r\\n  mode=\\\"indeterminate\\\"\\r\\n  color=\\\"primary\\\"\\r\\n  *ngIf=\\\"processing\\\"></mat-progress-bar>\\r\\n<div class=\\\"main__content\\\">\\r\\n  <div class=\\\"main__header\\\">\\r\\n    <h2 class=\\\"main__title\\\">Login</h2>\\r\\n  </div>\\r\\n  <mat-card>\\r\\n    <form [formGroup]=\\\"form\\\">\\r\\n      <mat-grid-list cols=\\\"1\\\" rowHeight=\\\"81px\\\">\\r\\n        <mat-grid-tile>\\r\\n          <mat-form-field appearance=\\\"fill\\\" class=\\\"fullwidth\\\">\\r\\n            <mat-label>Email</mat-label>\\r\\n            <input matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\">\\r\\n          </mat-form-field>\\r\\n        </mat-grid-tile>\\r\\n        <mat-grid-tile>\\r\\n          <mat-form-field appearance=\\\"fill\\\" class=\\\"fullwidth\\\">\\r\\n            <mat-label>Senha</mat-label>\\r\\n            <input type=\\\"password\\\" matInput placeholder=\\\"Senha\\\" formControlName=\\\"password\\\">\\r\\n          </mat-form-field>\\r\\n        </mat-grid-tile>\\r\\n      </mat-grid-list>\\r\\n    </form>\\r\\n    <mat-card-actions align=\\\"end\\\">\\r\\n      <button mat-button [routerLink]=\\\"['/account', 'forgot-password']\\\" color=\\\"primary\\\">Esqueci minha senha</button>\\r\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"login()\\\">Entrar</button>\\r\\n    </mat-card-actions>\\r\\n  </mat-card>\\r\\n</div>\\r\\n\"","module.exports = \"<mat-progress-bar\\r\\n  class=\\\"progress-bar\\\"\\r\\n  mode=\\\"indeterminate\\\"\\r\\n  color=\\\"primary\\\"\\r\\n  *ngIf=\\\"processing\\\"></mat-progress-bar>\\r\\n<div class=\\\"main__content\\\">\\r\\n  <div class=\\\"main__header\\\">\\r\\n    <h2 class=\\\"main__title\\\">Criar nova senha</h2>\\r\\n  </div>\\r\\n  <mat-card>\\r\\n    <form [formGroup]=\\\"form\\\">\\r\\n      <mat-grid-list cols=\\\"1\\\" rowHeight=\\\"81px\\\">\\r\\n        <mat-grid-tile>\\r\\n          <mat-form-field appearance=\\\"fill\\\" class=\\\"fullwidth\\\">\\r\\n            <mat-label>Senha</mat-label>\\r\\n            <input type=\\\"password\\\" matInput placeholder=\\\"Senha\\\" formControlName=\\\"password\\\">\\r\\n          </mat-form-field>\\r\\n        </mat-grid-tile>\\r\\n        <mat-grid-tile>\\r\\n          <mat-form-field appearance=\\\"fill\\\" class=\\\"fullwidth\\\">\\r\\n            <mat-label>Confirmar senha</mat-label>\\r\\n            <input type=\\\"password\\\" matInput placeholder=\\\"Repita a senha\\\" formControlName=\\\"confirm\\\">\\r\\n          </mat-form-field>\\r\\n        </mat-grid-tile>\\r\\n      </mat-grid-list>\\r\\n    </form>\\r\\n    <mat-card-actions align=\\\"end\\\">\\r\\n      <button mat-raised-button\\r\\n              color=\\\"primary\\\"\\r\\n              (click)=\\\"send()\\\">Concluir</button>\\r\\n    </mat-card-actions>\\r\\n  </mat-card>\\r\\n</div>\\r\\n\"","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {\r\n  ActivateEmailComponent,\r\n  CreateAccountComponent,\r\n  ForgotPasswordComponent, LinkAccountComponent,\r\n  LoginComponent,\r\n  RecoveryPasswordComponent\r\n} from '@app/auth/containers';\r\nimport {AuthenticatedGuard, NonAuthenticatedGuard} from '@app/_guards';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'activate',\r\n    component: ActivateEmailComponent,\r\n    canActivate: [NonAuthenticatedGuard]\r\n  },\r\n  {\r\n    path: 'link-account',\r\n    component: LinkAccountComponent,\r\n    canActivate: [AuthenticatedGuard]\r\n  },\r\n  {\r\n    path: 'register',\r\n    component: CreateAccountComponent,\r\n    canActivate: [NonAuthenticatedGuard]\r\n  },\r\n  {\r\n    path: 'forgot-password',\r\n    component: ForgotPasswordComponent,\r\n    canActivate: [NonAuthenticatedGuard]\r\n  },\r\n  {\r\n    path: 'recovery-password',\r\n    component: RecoveryPasswordComponent,\r\n    canActivate: [NonAuthenticatedGuard]\r\n  },\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent,\r\n    canActivate: [NonAuthenticatedGuard]\r\n  },\r\n  {\r\n    path: '',\r\n    pathMatch: 'full',\r\n    redirectTo: 'login'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AuthRoutingModule {\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {CreateAccountComponent, ForgotPasswordComponent, LoginComponent} from './containers';\r\nimport {AuthRoutingModule} from './auth-routing.module';\r\nimport {\r\n  MatButtonModule,\r\n  MatCardModule,\r\n  MatGridListModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatProgressBarModule, MatProgressSpinnerModule,\r\n  MatSnackBarModule\r\n} from '@angular/material';\r\nimport {RecoveryPasswordComponent} from './containers/recovery-password/recovery-password.component';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {ActivateEmailComponent} from './containers/activate-email/activate-email.component';\r\nimport {LinkAccountComponent} from './containers/link-account/link-account.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CreateAccountComponent,\r\n    LoginComponent,\r\n    ForgotPasswordComponent,\r\n    RecoveryPasswordComponent,\r\n    ActivateEmailComponent,\r\n    LinkAccountComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatGridListModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatSnackBarModule,\r\n    AuthRoutingModule\r\n  ]\r\n})\r\nexport class AuthModule {\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvY29udGFpbmVycy9hY3RpdmF0ZS1lbWFpbC9hY3RpdmF0ZS1lbWFpbC5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {MatSnackBar} from '@angular/material';\nimport {AccountService} from '@app/_services';\n\n@Component({\n  selector: 'edl-activate-email',\n  templateUrl: './activate-email.component.html',\n  styleUrls: ['./activate-email.component.scss']\n})\nexport class ActivateEmailComponent implements OnInit {\n\n  token: string;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private service: AccountService,\n    private snackbar: MatSnackBar\n  ) {\n  }\n\n  ngOnInit() {\n    this.route.queryParamMap.subscribe(\n      params => {\n        this.token = params.get('token');\n        this.service.confirmEmail(this.token)\n          .subscribe(response => {\n            this.snackbar.open('Email confirmado com sucesso!', 'Ok', {\n              duration: 3000\n            });\n            this.router.navigate(['/account', 'login']);\n          });\n      }\n    );\n  }\n\n}\n","export * from './activate-email.component';\r\n","module.exports = \":host {\\n  width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9jb250YWluZXJzL2NyZWF0ZS1hY2NvdW50L0M6XFxkZXZcXGVkbC1jbGllbnQvc3JjXFxhcHBcXGF1dGhcXGNvbnRhaW5lcnNcXGNyZWF0ZS1hY2NvdW50XFxjcmVhdGUtYWNjb3VudC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvYXV0aC9jb250YWluZXJzL2NyZWF0ZS1hY2NvdW50L2NyZWF0ZS1hY2NvdW50LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBQTtBQ0NGIiwiZmlsZSI6InNyYy9hcHAvYXV0aC9jb250YWluZXJzL2NyZWF0ZS1hY2NvdW50L2NyZWF0ZS1hY2NvdW50LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcbiIsIjpob3N0IHtcbiAgd2lkdGg6IDEwMCU7XG59Il19 */\"","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {AccountService} from '@app/_services';\r\nimport {MatSnackBar} from '@angular/material';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'edl-create-account',\r\n  templateUrl: './create-account.component.html',\r\n  styleUrls: ['./create-account.component.scss']\r\n})\r\nexport class CreateAccountComponent implements OnInit, OnDestroy {\r\n\r\n  processing = false;\r\n  form: FormGroup;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private service: AccountService,\r\n    private snackbar: MatSnackBar\r\n  ) {\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.processing = false;\r\n    this.form.reset({});\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setupForm();\r\n  }\r\n\r\n  create() {\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n\r\n    const {name, email, password, confirm} = this.form.value;\r\n\r\n    if (password !== confirm) {\r\n      return;\r\n    }\r\n    this.processing = true;\r\n    this.form.disable();\r\n\r\n    this.service.create({name, email, password})\r\n      .subscribe(\r\n        response => {\r\n          this.snackbar.open('Conta criada! Verifique seu email', 'Ok', {\r\n            duration: 0\r\n          });\r\n          this.router.navigate(['/vacancies']);\r\n        },\r\n        () => {\r\n          this.snackbar.open('Ocorreu um erro. Tente novamente!', 'Ok');\r\n          this.form.enable();\r\n          this.processing = false;\r\n        }\r\n      );\r\n  }\r\n\r\n  private setupForm() {\r\n    this.form = this.fb.group({\r\n      name: this.fb.control('', [Validators.required, Validators.minLength(3)]),\r\n      email: this.fb.control('', [Validators.required, Validators.email]),\r\n      password: this.fb.control('', Validators.required),\r\n      confirm: this.fb.control('', Validators.required)\r\n    });\r\n  }\r\n\r\n}\r\n","export * from './create-account.component';\r\n","module.exports = \":host {\\n  width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9jb250YWluZXJzL2ZvcmdvdC1wYXNzd29yZC9DOlxcZGV2XFxlZGwtY2xpZW50L3NyY1xcYXBwXFxhdXRoXFxjb250YWluZXJzXFxmb3Jnb3QtcGFzc3dvcmRcXGZvcmdvdC1wYXNzd29yZC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvYXV0aC9jb250YWluZXJzL2ZvcmdvdC1wYXNzd29yZC9mb3Jnb3QtcGFzc3dvcmQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFBO0FDQ0YiLCJmaWxlIjoic3JjL2FwcC9hdXRoL2NvbnRhaW5lcnMvZm9yZ290LXBhc3N3b3JkL2ZvcmdvdC1wYXNzd29yZC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG4iLCI6aG9zdCB7XG4gIHdpZHRoOiAxMDAlO1xufSJdfQ== */\"","import {Component, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {AuthService} from '@app/_services';\r\nimport {MatSnackBar} from '@angular/material';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'edl-forgot-password',\r\n  templateUrl: './forgot-password.component.html',\r\n  styleUrls: ['./forgot-password.component.scss']\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n\r\n  processing = false;\r\n  form: FormGroup;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private fb: FormBuilder,\r\n    private snackbar: MatSnackBar,\r\n    private router: Router\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setupForm();\r\n  }\r\n\r\n  send() {\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n    this.form.disable();\r\n    const {email} = this.form.value;\r\n    this.processing = true;\r\n    this.authService.forgot(email)\r\n      .subscribe(\r\n        () => {\r\n          this.processing = false;\r\n          this.snackbar.open('Enviamos um email para você');\r\n          this.router.navigate(['/vacancies']);\r\n        },\r\n        (err) => {\r\n          this.processing = false;\r\n          this.form.enable();\r\n          this.snackbar.open('Ocorreu um erro. Verifique o email informado', 'Ok');\r\n        }\r\n      );\r\n\r\n  }\r\n\r\n  private setupForm() {\r\n    this.form = this.fb.group({\r\n      email: this.fb.control('', [Validators.required, Validators.email])\r\n    });\r\n  }\r\n\r\n}\r\n","export * from './forgot-password.component';\r\n","export * from './activate-email';\r\nexport * from './create-account';\r\nexport * from './forgot-password';\r\nexport * from './link-account';\r\nexport * from './login';\r\nexport * from './recovery-password';\r\n\r\n","export * from './link-account.component';\r\n","module.exports = \":host {\\n  width: 100%;\\n}\\n\\n.profile-icon {\\n  border: 3px solid rgba(0, 0, 0, 0.38);\\n  -webkit-box-align: center;\\n          align-items: center;\\n  border-radius: 64px;\\n  display: -webkit-box;\\n  display: flex;\\n  height: 128px;\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  overflow: hidden;\\n  margin: 0 auto;\\n  width: 128px;\\n}\\n\\n.profile-icon__image {\\n  display: -webkit-box;\\n  display: flex;\\n  height: 100%;\\n  width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9jb250YWluZXJzL2xpbmstYWNjb3VudC9DOlxcZGV2XFxlZGwtY2xpZW50L3NyY1xcYXBwXFxhdXRoXFxjb250YWluZXJzXFxsaW5rLWFjY291bnRcXGxpbmstYWNjb3VudC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvYXV0aC9jb250YWluZXJzL2xpbmstYWNjb3VudC9saW5rLWFjY291bnQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFBO0FDQ0Y7O0FERUE7RUFDRSxxQ0FBQTtFQUNBLHlCQUFBO1VBQUEsbUJBQUE7RUFDQSxtQkFBQTtFQUNBLG9CQUFBO0VBQUEsYUFBQTtFQUNBLGFBQUE7RUFDQSx3QkFBQTtVQUFBLHVCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxjQUFBO0VBQ0EsWUFBQTtBQ0NGOztBRENBO0VBQ0Usb0JBQUE7RUFBQSxhQUFBO0VBQ0EsWUFBQTtFQUNBLFdBQUE7QUNFRiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvY29udGFpbmVycy9saW5rLWFjY291bnQvbGluay1hY2NvdW50LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4ucHJvZmlsZS1pY29uIHtcclxuICBib3JkZXI6IDNweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMzgpO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgYm9yZGVyLXJhZGl1czogNjRweDtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGhlaWdodDogMTI4cHg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICBtYXJnaW46IDAgYXV0bztcclxuICB3aWR0aDogMTI4cHg7XHJcbn1cclxuLnByb2ZpbGUtaWNvbl9faW1hZ2Uge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcbiIsIjpob3N0IHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5wcm9maWxlLWljb24ge1xuICBib3JkZXI6IDNweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMzgpO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBib3JkZXItcmFkaXVzOiA2NHB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBoZWlnaHQ6IDEyOHB4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHdpZHRoOiAxMjhweDtcbn1cblxuLnByb2ZpbGUtaWNvbl9faW1hZ2Uge1xuICBkaXNwbGF5OiBmbGV4O1xuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOiAxMDAlO1xufSJdfQ== */\"","import {Component, OnInit} from '@angular/core';\nimport {AccountService, AuthService, RiotService} from '@app/_services';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {MatSnackBar} from '@angular/material';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'edl-link-account',\n  templateUrl: './link-account.component.html',\n  styleUrls: ['./link-account.component.scss']\n})\nexport class LinkAccountComponent implements OnInit {\n\n  form: FormGroup;\n  iconId: number;\n  processing = false;\n\n  constructor(\n    private authService: AuthService,\n    private fb: FormBuilder,\n    private riotService: RiotService,\n    private router: Router,\n    private snackbar: MatSnackBar,\n    private service: AccountService\n  ) {\n  }\n\n  ngOnInit() {\n    this.setupForm();\n  }\n\n  get urlIcon(): string {\n    return this.iconId ? this.riotService.urlToIcon(this.iconId) : null;\n  }\n\n  register() {\n    if (this.form.invalid) {\n      return;\n    }\n\n    const {summoner} = this.form.value;\n    this.processing = true;\n    this.form.disable();\n\n    this.service.registerSummoner(summoner)\n      .subscribe(\n        response => {\n          this.iconId = response.iconId;\n          this.processing = false;\n        },\n        (err) => {\n          this.processing = false;\n          this.form.enable();\n        }\n      );\n  }\n\n  verify() {\n    const { summoner } = this.form.value;\n    this.processing = true;\n    this.service.verifySummoner(summoner, this.iconId)\n      .subscribe(\n        response => {\n        this.authService.setSummonerConfirmed();\n        this.authService.setSummoner(response);\n        this.snackbar.open('Sua conta foi verificada!');\n        this.router.navigate(['/vacancies']);\n        this.processing = false;\n      },\n        () => {\n          this.processing = false;\n          this.snackbar.open('Oops... um erro ocorreu um erro!', 'Ok');\n        });\n  }\n\n  private setupForm() {\n    this.form = this.fb.group({\n      summoner: this.fb.control('', [Validators.required, Validators.minLength(5)])\n    });\n  }\n\n}\n","export * from './login.component';\r\n","module.exports = \":host {\\n  width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9jb250YWluZXJzL2xvZ2luL0M6XFxkZXZcXGVkbC1jbGllbnQvc3JjXFxhcHBcXGF1dGhcXGNvbnRhaW5lcnNcXGxvZ2luXFxsb2dpbi5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvYXV0aC9jb250YWluZXJzL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBQTtBQ0NGIiwiZmlsZSI6InNyYy9hcHAvYXV0aC9jb250YWluZXJzL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcbiIsIjpob3N0IHtcbiAgd2lkdGg6IDEwMCU7XG59Il19 */\"","import {Component, OnInit} from '@angular/core';\r\nimport {AuthService} from '@app/_services';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {Router} from '@angular/router';\r\nimport {MatSnackBar} from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'edl-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  processing = false;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private service: AuthService,\r\n    private snackbar: MatSnackBar\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setupForm();\r\n  }\r\n\r\n  login() {\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n\r\n    const {email, password} = this.form.value;\r\n    this.form.disable();\r\n    this.processing = true;\r\n\r\n    this.service.login(email, password)\r\n      .subscribe(\r\n        response => {\r\n          if (!response.account_verified) {\r\n            this.router.navigate(['/account', 'link-account']);\r\n            return;\r\n          }\r\n          this.router.navigate(['/vacancies']);\r\n          this.processing = false;\r\n        },\r\n        () => {\r\n          this.processing = false;\r\n          this.snackbar.open('Erro! Verifique o email e a senha informados!', 'Ok');\r\n          this.form.enable();\r\n        });\r\n  }\r\n\r\n  private setupForm() {\r\n    this.form = this.fb.group({\r\n      email: this.fb.control('', [Validators.required, Validators.email]),\r\n      password: this.fb.control('', [Validators.required])\r\n    });\r\n  }\r\n}\r\n","export * from './recovery-password.component';\r\n","module.exports = \":host {\\n  width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9jb250YWluZXJzL3JlY292ZXJ5LXBhc3N3b3JkL0M6XFxkZXZcXGVkbC1jbGllbnQvc3JjXFxhcHBcXGF1dGhcXGNvbnRhaW5lcnNcXHJlY292ZXJ5LXBhc3N3b3JkXFxyZWNvdmVyeS1wYXNzd29yZC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvYXV0aC9jb250YWluZXJzL3JlY292ZXJ5LXBhc3N3b3JkL3JlY292ZXJ5LXBhc3N3b3JkLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBQTtBQ0NGIiwiZmlsZSI6InNyYy9hcHAvYXV0aC9jb250YWluZXJzL3JlY292ZXJ5LXBhc3N3b3JkL3JlY292ZXJ5LXBhc3N3b3JkLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcbiIsIjpob3N0IHtcbiAgd2lkdGg6IDEwMCU7XG59Il19 */\"","import {Component, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {AuthService} from '@app/_services';\r\nimport {MatSnackBar} from '@angular/material';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'edl-recovery-password',\r\n  templateUrl: './recovery-password.component.html',\r\n  styleUrls: ['./recovery-password.component.scss']\r\n})\r\nexport class RecoveryPasswordComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  processing = false;\r\n  token: string;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private fb: FormBuilder,\r\n    private snackbar: MatSnackBar,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setupForm();\r\n    this.route.queryParamMap.subscribe(\r\n      params => this.token = params.get('token')\r\n    );\r\n  }\r\n\r\n  send() {\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n    const {password, confirm} = this.form.value;\r\n    if (password !== confirm) {\r\n      this.form.get('confirm').setErrors({invalid: 'As senhas devem ser iguais'});\r\n      return;\r\n    } else {\r\n      this.form.get('confirm').setErrors(null);\r\n    }\r\n\r\n    this.form.disable();\r\n    this.processing = true;\r\n    this.authService.redefine(password, this.token)\r\n      .subscribe(\r\n        () => {\r\n          this.processing = false;\r\n          this.snackbar.open('Senha alterada com sucesso!');\r\n          this.router.navigate(['/account', 'login']);\r\n        },\r\n        (err) => {\r\n          this.processing = false;\r\n          this.form.enable();\r\n          this.snackbar.open('Ocorreu um erro', 'Ok');\r\n        }\r\n      );\r\n\r\n  }\r\n\r\n  private setupForm() {\r\n    this.form = this.fb.group({\r\n      password: this.fb.control('', [Validators.required]),\r\n      confirm: this.fb.control('', [Validators.required])\r\n    });\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}